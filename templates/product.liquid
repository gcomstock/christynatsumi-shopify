<!-- /templates/product.liquid -->
{% comment %}
  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html
{% endcomment %}


<main class="cn-wrapper cn-wrapper--top">
  <h1>{{ product.title }}</h1>

  <div class="cn-product" itemscope itemtype="http://schema.org/Product">


    <!--LEFT COLUMN-->
    <div class="cn-product__mask">
      {% for image in product.images %}
        {% if image.position == 1 %}
          <img class="cn-product__mask__slide active cn-imageFrame" src="{{ image | img_url : 'master' }}" itemprop="image" alt="original"/>
        {% else %}
          <img class="cn-product__mask__slide cn-imageFrame" src="{{ image | img_url : 'master' }}" alt="original"/>
        {% endif %}
      {% endfor %}
    </div>


    <!--RIGHT COLUMN-->
    <div class="cn-product__details">

      {% if product.images.size > 1 %}
        <div class="cn-product__tnContainer">
          {% for image in product.images %}
            <div class="cn-product__tnContainer__tn" data-index="{{ image.position }}">
              <img
                alt="{{ image.alt }}"
                data-sizes="auto"
                data-src="{{ image | img_url: '300x300', crop: 'bottom' }}"
                data-srcset="{{ image | img_url: '200x200', crop: 'bottom' }} 200w,
                             {{ image | img_url: '300x300', crop: 'bottom' }} 300w"
                class="lazyload"
              />
            </div>
          {% endfor %}
        </div>
      {% endif %}


      <div class="cn-product__options">

        <div class="content-wrapper">
          <label for="Price">Price</label>
          <div class="cn-product__price" id="js-ProductPrice">{{ current_variant.price | money }}</div>
        </div>

        <form action="/cart/add" method="post">
          <select name="id" id="js-ProductSelect">
            {% for variant in product.variants %}
              <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
            {% endfor %}
          </select>


          <!--<div id="infiniteoptions-container"></div>-->


          {% if product.metafields.details.measurements %}
            <div class="content-wrapper">
              <label for="Measurements">Measurements</label>
              <p>{{ product.metafields.details.measurements }}</p>
            </div>
          {% endif %}


          <div class="content-wrapper">
            <label>Quantity</label>
            <input type="number" name="quantity" value="1" min="1" max="9999">
          </div>


          <div class="content-wrapper">
            <label></label>
            <button type="submit" class="dark" id="js-AddToCart">add to cart</button>
          </div>
        </form>
      </div>


      <p>{{ product.description }}</p>
    </div>
  </div>


  <div class="cn-product__related">
    {% section 'related-products' %}
  </div>
</main>


{{ 'lazysizes.min.js' | asset_url | script_tag }}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}


<script>

  // thumbnail click handler
	function thumbnailClickEvent() {
		var productTn = document.querySelectorAll('.cn-product__tnContainer__tn');

		for (var i = 0; i < productTn.length; i++) {
			productTn[i].addEventListener('click', function(){
				var clicked = this.dataset.index-1;
				var slides = document.querySelectorAll('.cn-product__mask__slide');

				for (var i = 0; i < slides.length; i++) {
					slides[i].classList.remove('active');
				}
				slides[clicked].classList.add('active');
			}, false);
		}
	}

	thumbnailClickEvent();


  jQuery(function($) {
    var priceFormatter = function(priceStr) {
      var chopDolla = priceStr.slice(1, priceStr.length);
      var chopCents = chopDolla.slice(0, chopDolla.length - 3);
      return chopCents;
    }


    // when an option is selected
    var selectCallback = function(variant, selector) {

      if (variant) {
        if (variant.available) {
          // Selected a valid variant that is available.
          $('#js-AddToCart').val('Add to Cart').html('Add to Cart').removeClass('disabled').removeAttr('disabled').fadeTo(200,1);
        } else {
          // Variant is sold out.
          $('#js-AddToCart').val('Sold Out').html('Sold Out').addClass('disabled').attr('disabled', 'disabled').fadeTo(200,0.5);
        }
        // Whether the variant is in stock or not, we can update the price and compare at price.
        if ( variant.compare_at_price > variant.price ) {
          $('#js-ProductPrice').html('<span>' + priceFormatter( Shopify.formatMoney(variant.price) ) + '</span>' + '<span class="compare-price">' + priceFormatter( Shopify.formatMoney(variant.compare_at_price) ) + '</span>');
        } else {
          $('#js-ProductPrice').html('<span>'+ priceFormatter( Shopify.formatMoney(variant.price) ) + '</span>' );
        }
      } else {
        // variant doesn't exist.
        $('#js-AddToCart').val('Unavailable').html('Unavilable').addClass('disabled').attr('disabled', 'disabled').fadeTo(200,0.5);
      }

      $('.cn-product__options').show();
    }


    new Shopify.OptionSelectors('js-ProductSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback
    });

    // Add first variant label if only one and it isn't 'Title'. Could be 'Size' or 'Metal' for example.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}

  });
</script>